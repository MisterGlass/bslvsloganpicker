{"ast":null,"code":"var _jsxFileName = \"/srv/app/sloganpicker/src/App.js\";\nimport React from 'react'; //import ReactDOM from 'react-dom';\n\nimport GoogleLogin from 'react-google-login';\nimport GoogleLogout from 'react-google-login';\nimport axios from 'axios';\nimport './App.css';\nimport slogans from './sloganlist.json';\n\nfunction Slogan(props) {\n  return React.createElement(\"div\", {\n    className: \"slogan\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, props.text), React.createElement(\"button\", {\n    className: \"favbtn\",\n    onClick: props.favslogan,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Favorite\"), React.createElement(\"button\", {\n    className: \"hidebtn\",\n    onClick: function () {\n      alert('click');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Hide\"));\n}\n\nfunction Favorite(props) {\n  return React.createElement(\"div\", {\n    className: \"slogan\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.text), React.createElement(\"button\", {\n    className: \"unfavbtn\",\n    onClick: props.unfavslogan,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Remove\"));\n}\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = () => {\n      this.setState({\n        user: null\n      });\n    };\n\n    this.responseGoogle = response => {\n      if (response.profileObj.email.split('@')[1] === 'bsideslv.org') {\n        this.setState({\n          user: response.profileObj\n        });\n      } else {\n        alert('Login unsucesful, please login with your bsideslv google account');\n      }\n\n      ;\n    };\n\n    this.submitVote = () => {\n      if (window.confirm('Are you sure these are what you want to submit?')) {\n        var actionurl = \"https://docs.google.com/forms/d/e/1FAIpQLSfoltL6Tpy9O3C-egmhu4sgyW8QKqC1oYQvaL5mmmpOjj-GbA/formResponse\";\n        var usernamefield = \"entry.1281984272\";\n        var jsonfield = \"entry.1106511397\";\n        var corsproxy = 'https://cors-anywhere.herokuapp.com/';\n        var favids = this.state.favorites.map(slogan => {\n          return slogan.id;\n        });\n        console.log(JSON.stringify(favids));\n        const formData = new FormData();\n        formData.append(usernamefield, this.state.user.email);\n        formData.append(jsonfield, JSON.stringify(favids));\n        axios.post(corsproxy + actionurl, formData).then(() => {\n          this.setState({\n            message: '',\n            email: ''\n          });\n        }).catch(() => {\n          this.setState({\n            messageError: true\n          });\n        });\n        this.state.submitted = true;\n      }\n    };\n\n    this.state = {\n      favorites: [],\n      user: null,\n      submitted: false\n    };\n  }\n\n  favSlogan(key, slogan) {\n    const favorites = this.state.favorites.slice();\n    favorites.push(slogan);\n    this.setState({\n      favorites: favorites\n    });\n  }\n\n  unfavSlogan(key, slogan) {\n    const favorites = this.state.favorites.slice();\n\n    for (var i = 0; i < favorites.length; i++) {\n      if (favorites[i].id = slogan.id) {\n        favorites.splice(i, 1);\n        break;\n      }\n    }\n\n    this.setState({\n      favorites: favorites\n    });\n  }\n\n  renderSlogan(key, slogan) {\n    return React.createElement(Slogan, {\n      key: key,\n      text: slogan.slogan,\n      favslogan: () => this.favSlogan(key, slogan),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    });\n  }\n\n  renderFavorite(key, slogan) {\n    return React.createElement(Favorite, {\n      key: key,\n      text: slogan.slogan,\n      unfavslogan: () => this.unfavSlogan(key, slogan),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    if (this.state.user == null) {\n      return React.createElement(\"div\", {\n        style: \"padding: 20px;\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Please log in with your BSidesLV account to continue\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(GoogleLogin, {\n        clientId: \"693738722966-m2uhbrdhrsb1el7u0uiomj1lmov1bbrr.apps.googleusercontent.com\",\n        buttonText: \"Login\",\n        onSuccess: this.responseGoogle,\n        onFailure: this.responseGoogle,\n        cookiePolicy: 'single_host_origin',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }));\n    } else if (this.state.submitted) {\n      return React.createElement(\"div\", {\n        style: \"padding: 20px;\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Thank you for submitting your slogan nominations!\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Welcome to the BSidesLV slogan nominations!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Every staff member is allowed to pick up to 10 for nominations. The top 10 will be put to a public vote.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), \"If you like a slogan, click on favorite & it will be added to your favorites list on the right. Once you are done reviewing slogans, click submit to send us your nominations.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), \"Note: you can add however many slogans you like to your favorites, but if you have more than 10 you will need to remove them from your list before submitting.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"slogans\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, slogans.map((slogan, i) => {\n        return this.renderSlogan(i, slogan);\n      })), React.createElement(\"div\", {\n        className: \"favorites\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, this.state.favorites.map((slogan, i) => {\n        return this.renderFavorite(i, slogan);\n      }), this.state.favorites.length > 0 ? this.state.favorites.length <= 10 ? React.createElement(\"button\", {\n        className: \"submitbtn\",\n        onClick: this.submitVote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Submit\") : React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Too many slogans selected, please remove some to submit.\") : React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Favorite some slogans\")));\n    }\n  }\n\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/srv/app/sloganpicker/src/App.js"],"names":["React","GoogleLogin","GoogleLogout","axios","slogans","Slogan","props","text","favslogan","alert","Favorite","unfavslogan","Main","Component","constructor","logout","setState","user","responseGoogle","response","profileObj","email","split","submitVote","window","confirm","actionurl","usernamefield","jsonfield","corsproxy","favids","state","favorites","map","slogan","id","console","log","JSON","stringify","formData","FormData","append","post","then","message","catch","messageError","submitted","favSlogan","key","slice","push","unfavSlogan","i","length","splice","renderSlogan","renderFavorite","render","App"],"mappings":"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","sourcesContent":["import React from 'react';\n//import ReactDOM from 'react-dom';\nimport GoogleLogin from 'react-google-login';\nimport GoogleLogout from 'react-google-login';\nimport axios from 'axios';\nimport './App.css';\n\nimport slogans from './sloganlist.json';\n\nfunction Slogan(props) {\n    return (\n        <div className=\"slogan\">\n            <p>{props.text}</p>\n            <button className=\"favbtn\" onClick={props.favslogan}>\n                Favorite\n            </button>\n            <button className=\"hidebtn\" onClick={function() { alert('click'); }}>\n                Hide\n            </button>\n        </div>\n    );\n}\n\nfunction Favorite(props) {\n    return (\n        <div className=\"slogan\">\n            <p>{props.text}</p>\n            <button className=\"unfavbtn\" onClick={props.unfavslogan}>\n                Remove\n            </button>\n        </div>\n    );\n}\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            favorites: [],\n            user: null,\n            submitted: false,\n        };\n    }\n\n    favSlogan(key, slogan) {\n        const favorites = this.state.favorites.slice();\n        favorites.push(slogan);\n        this.setState({favorites: favorites});\n    }\n\n    unfavSlogan(key, slogan) {\n        const favorites = this.state.favorites.slice();\n        for (var i = 0; i < favorites.length; i++) { \n            if (favorites[i].id = slogan.id) {\n                favorites.splice(i, 1);\n                break;\n            }\n        }\n        this.setState({favorites: favorites});\n    }\n\n    renderSlogan(key, slogan) {\n        return (\n            <Slogan key={key} text={slogan.slogan} favslogan={() => this.favSlogan(key, slogan)} />\n        )\n    }\n\n    renderFavorite(key, slogan) {\n        return (\n            <Favorite key={key} text={slogan.slogan} unfavslogan={() => this.unfavSlogan(key, slogan)} />\n        )\n    }\n\n    logout = () => {\n        this.setState({user: null});\n    }\n\n    responseGoogle = (response) => {\n        if (response.profileObj.email.split('@')[1] === 'bsideslv.org') {\n            this.setState({user: response.profileObj});\n        } else {\n            alert('Login unsucesful, please login with your bsideslv google account');\n        };\n    }\n\n    submitVote = () => {\n        if (window.confirm('Are you sure these are what you want to submit?')) {\n            var actionurl = \"https://docs.google.com/forms/d/e/1FAIpQLSfoltL6Tpy9O3C-egmhu4sgyW8QKqC1oYQvaL5mmmpOjj-GbA/formResponse\";\n            var usernamefield = \"entry.1281984272\";\n            var jsonfield = \"entry.1106511397\";\n            var corsproxy = 'https://cors-anywhere.herokuapp.com/';\n            var favids = this.state.favorites.map((slogan) => {\n                return slogan.id;\n            });\n            console.log(JSON.stringify(favids));\n\n            const formData = new FormData()\n            formData.append(usernamefield, this.state.user.email)\n            formData.append(jsonfield, JSON.stringify(favids))\n            axios.post(corsproxy + actionurl, formData)\n            .then(() => {\n                this.setState({\n                message: '',\n                email: ''\n                })\n            }).catch(() => {\n                this.setState({\n                    messageError: true,\n                })\n            })\n            \n            this.state.submitted = true;\n        }\n    }\n\n    render() {\n        if (this.state.user == null) {\n            return (\n                <div style=\"padding: 20px;\">\n                    Please log in with your BSidesLV account to continue<br />\n                    <GoogleLogin\n                        clientId=\"693738722966-m2uhbrdhrsb1el7u0uiomj1lmov1bbrr.apps.googleusercontent.com\"\n                        buttonText=\"Login\"\n                        onSuccess={this.responseGoogle}\n                        onFailure={this.responseGoogle}\n                        cookiePolicy={'single_host_origin'}\n                    />\n                </div>\n            )\n        } else if (this.state.submitted) {\n            return (\n                <div style=\"padding: 20px;\">\n                    Thank you for submitting your slogan nominations!\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <h2>Welcome to the BSidesLV slogan nominations!</h2>\n                    <p>\n                        Every staff member is allowed to pick up to 10 for nominations. The top 10 will be put to a public vote.<br />\n                        If you like a slogan, click on favorite &amp; it will be added to your favorites list on the right. Once you are done reviewing slogans, click submit to send us your nominations.<br />\n                        Note: you can add however many slogans you like to your favorites, but if you have more than 10 you will need to remove them from your list before submitting.<br />\n                    </p>\n                    <div className=\"slogans\">\n                        {slogans.map((slogan, i) => {\n                            return this.renderSlogan(i, slogan);\n                        })}\n                    </div>\n                    <div className=\"favorites\">\n                        {this.state.favorites.map((slogan, i) => {\n                            return this.renderFavorite(i, slogan);\n                        })}\n                        {this.state.favorites.length > 0 ? (\n                            this.state.favorites.length <= 10 ? (\n                                <button className=\"submitbtn\" onClick={this.submitVote}>\n                                    Submit\n                                </button>\n                            ) : (\n                                <h2>Too many slogans selected, please remove some to submit.</h2>\n                            )\n                        ): (\n                            <h2>Favorite some slogans</h2>\n                        ) }\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Main />\n        </div>\n    )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
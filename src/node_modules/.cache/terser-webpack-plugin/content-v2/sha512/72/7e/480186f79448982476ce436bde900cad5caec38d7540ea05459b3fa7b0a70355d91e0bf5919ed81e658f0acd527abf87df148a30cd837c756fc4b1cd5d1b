{"map":"{\"version\":3,\"sources\":[\"/srv/app/sloganpicker/src/App.js\",\"/srv/app/sloganpicker/src/serviceWorker.js\",\"/srv/app/sloganpicker/src/index.js\"],\"names\":[\"Slogan\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"text\",\"onClick\",\"favslogan\",\"Favorite\",\"unfavslogan\",\"Main\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"logout\",\"setState\",\"user\",\"responseGoogle\",\"response\",\"profileObj\",\"email\",\"split\",\"alert\",\"submitVote\",\"window\",\"confirm\",\"favids\",\"state\",\"favorites\",\"map\",\"slogan\",\"id\",\"console\",\"log\",\"JSON\",\"stringify\",\"formData\",\"FormData\",\"append\",\"axios\",\"post\",\"corsproxy\",\"then\",\"message\",\"catch\",\"messageError\",\"submitted\",\"key\",\"slice\",\"push\",\"i\",\"length\",\"splice\",\"_this2\",\"favSlogan\",\"_this3\",\"unfavSlogan\",\"_this4\",\"style\",\"padding\",\"google_login_default\",\"clientId\",\"buttonText\",\"onSuccess\",\"onFailure\",\"cookiePolicy\",\"slogans\",\"renderSlogan\",\"renderFavorite\",\"margin\",\"backgroundColor\",\"React\",\"Component\",\"App\",\"App_Main\",\"Boolean\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"0qOASA,SAASA,EAAOC,GACZ,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,IAAA,KAAIH,EAAMK,MACVJ,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,SAASE,QAASN,EAAMO,WAA1C,aAOZ,SAASC,EAASR,GACd,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,IAAA,KAAIH,EAAMK,MACVJ,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,WAAWE,QAASN,EAAMS,aAA5C,eAONC,cACF,SAAAA,EAAYV,GAAO,IAAAW,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMd,KAqCVkB,OAAS,WACLP,EAAKQ,SAAS,CAACC,KAAM,QAvCNT,EA0CnBU,eAAiB,SAACC,GACkC,iBAA5CA,EAASC,WAAWC,MAAMC,MAAM,KAAK,GACrCd,EAAKQ,SAAS,CAACC,KAAME,EAASC,aAE9BG,MAAM,qEA9CKf,EAkDnBgB,WAAa,WACT,GAAIC,OAAOC,QAAQ,mDAAoD,CACnE,IAIIC,EAASnB,EAAKoB,MAAMC,UAAUC,IAAI,SAACC,GACnC,OAAOA,EAAOC,KAElBC,QAAQC,IAAIC,KAAKC,UAAUT,IAE3B,IAAMU,EAAW,IAAIC,SACrBD,EAASE,OATW,mBASW/B,EAAKoB,MAAMX,KAAKI,OAC/CgB,EAASE,OATO,mBASWJ,KAAKC,UAAUT,IAC1Ca,EAAAA,EAAMC,KAAKC,8IAAuBL,GACjCM,KAAK,WACFnC,EAAKQ,SAAS,CACd4B,QAAS,GACTvB,MAAO,OAERwB,MAAM,WACLrC,EAAKQ,SAAS,CACV8B,cAAc,MAItBtC,EAAKQ,SAAS,CAAC+B,WAAW,MA1E9BvC,EAAKoB,MAAQ,CACTC,UAAW,GACXZ,KAAM,KACN8B,WAAW,GALAvC,yEASTwC,EAAKjB,GACX,IAAMF,EAAYlB,KAAKiB,MAAMC,UAAUoB,QACvCpB,EAAUqB,KAAKnB,GACfpB,KAAKK,SAAS,CAACa,UAAWA,wCAGlBmB,EAAKjB,GAEb,IADA,IAAMF,EAAYlB,KAAKiB,MAAMC,UAAUoB,QAC9BE,EAAI,EAAGA,EAAItB,EAAUuB,OAAQD,IAClC,GAAItB,EAAUsB,GAAGnB,KAAOD,EAAOC,GAAI,CAC/BH,EAAUwB,OAAOF,EAAG,GACpB,MAGRxC,KAAKK,SAAS,CAACa,UAAWA,yCAGjBmB,EAAKjB,GAAQ,IAAAuB,EAAA3C,KACtB,OACIb,EAAAC,EAAAC,cAACJ,EAAD,CAAQoD,IAAKA,EAAK9C,KAAM6B,EAAOA,OAAQ3B,UAAW,WAAA,OAAMkD,EAAKC,UAAUP,EAAKjB,6CAIrEiB,EAAKjB,GAAQ,IAAAyB,EAAA7C,KACxB,OACIb,EAAAC,EAAAC,cAACK,EAAD,CAAU2C,IAAKA,EAAK9C,KAAM6B,EAAOA,OAAQzB,YAAa,WAAA,OAAMkD,EAAKC,YAAYT,EAAKjB,uCA8CjF,IAAA2B,EAAA/C,KACL,OAAuB,MAAnBA,KAAKiB,MAAMX,KAEPnB,EAAAC,EAAAC,cAAA,MAAA,CAAK2D,MAAO,CAACC,QAAS,SAAtB,uDACwD9D,EAAAC,EAAAC,cAAA,KAAA,MACpDF,EAAAC,EAAAC,cAAC6D,EAAA9D,EAAD,CACI+D,SAAS,2EACTC,WAAW,QACXC,UAAWrD,KAAKO,eAChB+C,UAAWtD,KAAKO,eAChBgD,aAAc,wBAInBvD,KAAKiB,MAAMmB,UAEdjD,EAAAC,EAAAC,cAAA,MAAA,CAAK2D,MAAO,CAACC,QAAS,SAAtB,qDAMA9D,EAAAC,EAAAC,cAAA,MAAA,KACIF,EAAAC,EAAAC,cAAA,KAAA,KAAA,+CACAF,EAAAC,EAAAC,cAAA,IAAA,KAAA,2GAC4GF,EAAAC,EAAAC,cAAA,KAAA,MAD5G,iLAEsLF,EAAAC,EAAAC,cAAA,KAAA,MAFtL,iKAGkKF,EAAAC,EAAAC,cAAA,KAAA,OAElKF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,WACVkE,EAAQrC,IAAI,SAACC,EAAQoB,GAClB,OAAOO,EAAKU,aAAajB,EAAGpB,MAGpCjC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,aACVU,KAAKiB,MAAMC,UAAUC,IAAI,SAACC,EAAQoB,GAC/B,OAAOO,EAAKW,eAAelB,EAAGpB,KAEjCpB,KAAKiB,MAAMC,UAAUuB,OAAS,EAC3BzC,KAAKiB,MAAMC,UAAUuB,QAAU,GAC3BtD,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,YAAYE,QAASQ,KAAKa,WAAYmC,MAAO,CAACW,OAAQ,OAAQC,gBAAiB,QAAjG,UAIAzE,EAAAC,EAAAC,cAAA,KAAA,KAAA,4DAGJF,EAAAC,EAAAC,cAAA,KAAA,KAAA,kCAhITwE,EAAAA,EAAMC,WAiJVC,IAAAA,EARf,WACI,OACI5E,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAC2E,EAAD,QC/JQC,QACW,cAA7BnD,OAAOoD,SAASC,UAEe,UAA7BrD,OAAOoD,SAASC,UAEhBrD,OAAOoD,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOnF,EAAAC,EAAAC,cAACkF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5C,KAAK,SAAA6C,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react';\\n//import ReactDOM from 'react-dom';\\nimport GoogleLogin from 'react-google-login';\\n//import GoogleLogout from 'react-google-login';\\nimport axios from 'axios';\\nimport './App.css';\\n\\nimport slogans from './sloganlist.json';\\n\\nfunction Slogan(props) {\\n    return (\\n        <div className=\\\"slogan\\\">\\n            <p>{props.text}</p>\\n            <button className=\\\"favbtn\\\" onClick={props.favslogan}>\\n                Favorite\\n            </button>\\n        </div>\\n    );\\n}\\n\\nfunction Favorite(props) {\\n    return (\\n        <div className=\\\"slogan\\\">\\n            <p>{props.text}</p>\\n            <button className=\\\"unfavbtn\\\" onClick={props.unfavslogan}>\\n                Remove\\n            </button>\\n        </div>\\n    );\\n}\\n\\nclass Main extends React.Component {\\n    constructor(props) {\\n        super(props);\\n        this.state = {\\n            favorites: [],\\n            user: null,\\n            submitted: false,\\n        };\\n    }\\n\\n    favSlogan(key, slogan) {\\n        const favorites = this.state.favorites.slice();\\n        favorites.push(slogan);\\n        this.setState({favorites: favorites});\\n    }\\n\\n    unfavSlogan(key, slogan) {\\n        const favorites = this.state.favorites.slice();\\n        for (var i = 0; i < favorites.length; i++) { \\n            if (favorites[i].id === slogan.id) {\\n                favorites.splice(i, 1);\\n                break;\\n            }\\n        }\\n        this.setState({favorites: favorites});\\n    }\\n\\n    renderSlogan(key, slogan) {\\n        return (\\n            <Slogan key={key} text={slogan.slogan} favslogan={() => this.favSlogan(key, slogan)} />\\n        )\\n    }\\n\\n    renderFavorite(key, slogan) {\\n        return (\\n            <Favorite key={key} text={slogan.slogan} unfavslogan={() => this.unfavSlogan(key, slogan)} />\\n        )\\n    }\\n\\n    logout = () => {\\n        this.setState({user: null});\\n    }\\n\\n    responseGoogle = (response) => {\\n        if (response.profileObj.email.split('@')[1] === 'bsideslv.org') {\\n            this.setState({user: response.profileObj});\\n        } else {\\n            alert('Login unsucesful, please login with your bsideslv google account');\\n        };\\n    }\\n\\n    submitVote = () => {\\n        if (window.confirm('Are you sure these are what you want to submit?')) {\\n            var actionurl = \\\"https://docs.google.com/forms/d/e/1FAIpQLSfoltL6Tpy9O3C-egmhu4sgyW8QKqC1oYQvaL5mmmpOjj-GbA/formResponse\\\";\\n            var usernamefield = \\\"entry.1281984272\\\";\\n            var jsonfield = \\\"entry.1106511397\\\";\\n            var corsproxy = 'https://cors-anywhere.herokuapp.com/';\\n            var favids = this.state.favorites.map((slogan) => {\\n                return slogan.id;\\n            });\\n            console.log(JSON.stringify(favids));\\n\\n            const formData = new FormData()\\n            formData.append(usernamefield, this.state.user.email)\\n            formData.append(jsonfield, JSON.stringify(favids))\\n            axios.post(corsproxy + actionurl, formData)\\n            .then(() => {\\n                this.setState({\\n                message: '',\\n                email: ''\\n                })\\n            }).catch(() => {\\n                this.setState({\\n                    messageError: true,\\n                })\\n            })\\n            \\n            this.setState({submitted: true});\\n        }\\n    }\\n\\n    render() {\\n        if (this.state.user == null) {\\n            return (\\n                <div style={{padding: \\\"20px\\\"}}>\\n                    Please log in with your BSidesLV account to continue<br />\\n                    <GoogleLogin\\n                        clientId=\\\"693738722966-m2uhbrdhrsb1el7u0uiomj1lmov1bbrr.apps.googleusercontent.com\\\"\\n                        buttonText=\\\"Login\\\"\\n                        onSuccess={this.responseGoogle}\\n                        onFailure={this.responseGoogle}\\n                        cookiePolicy={'single_host_origin'}\\n                    />\\n                </div>\\n            )\\n        } else if (this.state.submitted) {\\n            return (\\n                <div style={{padding: \\\"20px\\\"}}>\\n                    Thank you for submitting your slogan nominations!\\n                </div>\\n            )\\n        } else {\\n            return (\\n                <div>\\n                    <h2>Welcome to the BSidesLV slogan nominations!</h2>\\n                    <p>\\n                        Every staff member is allowed to pick up to 10 for nominations. The top 10 will be put to a public vote.<br />\\n                        If you like a slogan, click on favorite &amp; it will be added to your favorites list on the right. Once you are done reviewing slogans, click submit to send us your nominations.<br />\\n                        Note: you can add however many slogans you like to your favorites, but if you have more than 10 you will need to remove them from your list before submitting.<br />\\n                    </p>\\n                    <div className=\\\"slogans\\\">\\n                        {slogans.map((slogan, i) => {\\n                            return this.renderSlogan(i, slogan);\\n                        })}\\n                    </div>\\n                    <div className=\\\"favorites\\\">\\n                        {this.state.favorites.map((slogan, i) => {\\n                            return this.renderFavorite(i, slogan);\\n                        })}\\n                        {this.state.favorites.length > 0 ? (\\n                            this.state.favorites.length <= 10 ? (\\n                                <button className=\\\"submitbtn\\\" onClick={this.submitVote} style={{margin: \\\"20px\\\", backgroundColor: 'red'}}>\\n                                    Submit\\n                                </button>\\n                            ) : (\\n                                <h2>Too many slogans selected, please remove some to submit.</h2>\\n                            )\\n                        ): (\\n                            <h2>Favorite some slogans</h2>\\n                        ) }\\n                    </div>\\n                </div>\\n            );\\n        }\\n    }\\n}\\n\\nfunction App() {\\n    return (\\n        <div className=\\\"App\\\">\\n            <Main />\\n        </div>\\n    )\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{15:function(e){e.exports=[{username:\"da_667\",slogan:\"10 years of fighting the man, only to find out those dudes who were fighting the man are now employed by the man. #BSidesLVSlogan\",id:0xf99bb89a8d79000,timestamp:\"Fri May 03 02:17:10 +0000 2019\"},{username:\"pAtchSavage87\",slogan:\"What happens in vegas is datamined in China #BSidesLVSlogan\",id:0xf99baca7e96d000,timestamp:\"Fri May 03 02:13:54 +0000 2019\"},{username:\"da_667\",slogan:\"One full decade of you insisting it wasn't DNS. #BSidesLVSlogan\",id:0xf99babc36d6c000,timestamp:\"Fri May 03 02:13:40 +0000 2019\"},{username:\"techno_muse\",slogan:\"Ten years on the flip side #BSidesLVSlogan\",id:0xf99b937d2d7a000,timestamp:\"Fri May 03 02:07:02 +0000 2019\"},{username:\"da_667\",slogan:\"YOU HEARD HIM, THE EXPLOIT IS TOO FAT FOR THE MALLOC. FETCH ME THE EXPLOIT STRETCHER. #BSidesLVSlogan\",id:0xf99b86e3a979000,timestamp:\"Fri May 03 02:03:35 +0000 2019\"},{username:\"AnonCorn\",slogan:\"Blame Tay and Da. They\\\\u2019re probably why we\\\\u2019re like this.\\\\n#BSidesLVSlogan\",id:0xf99b7beef17b000,timestamp:\"Fri May 03 02:00:36 +0000 2019\"},{username:\"da_667\",slogan:\"Somehow, between now and then, most of infosec has developed a corn fetish. #BSidesLVSlogan\",id:0xf99b7940397a000,timestamp:\"Fri May 03 01:59:52 +0000 2019\"},{username:\"da_667\",slogan:\"turns out that jet fuel CAN melt hacker dreams. #BSidesLVSlogan\",id:0xf99b6f768d60000,timestamp:\"Fri May 03 01:57:12 +0000 2019\"},{username:\"AnonCorn\",slogan:\"One attendee is not like the others\\\\U0001f3b6\\\\nOne attendee is not quite the same\\\\U0001f3b6\\\\nOne attendee is known for fucking a tank\\\\U0001f3b6\\\\n#BSidesLVSlogan\",id:0xf99b6f3bc97b000,timestamp:\"Fri May 03 01:57:08 +0000 2019\"},{username:\"AnonCorn\",slogan:\"We\\\\u2019re not all furries #BSidesLVSlogan\",id:0xf99b691b656e000,timestamp:\"Fri May 03 01:55:28 +0000 2019\"},{username:\"AnonCorn\",slogan:\"Let\\\\u2019s just filter out all of Da\\\\u2019s entries again this year #BSidesLVSlogan\",id:0xf99b5a2ca56c000,timestamp:\"Fri May 03 01:51:23 +0000 2019\"},{username:\"da_667\",slogan:\"egrep -v da_667 #BSidesLVSlogan\",id:0xf99b59505d7b000,timestamp:\"Fri May 03 01:51:09 +0000 2019\"},{username:\"AnonCorn\",slogan:\"Whatever our slogan is, it\\\\u2019s Da\\\\u2019s fault\\\\n#BSidesLVSlogan\",id:0xf99b519ce57a000,timestamp:\"Fri May 03 01:49:03 +0000 2019\"},{username:\"da_667\",slogan:\"bsideslv taught me that pedialyte is a great hangover cure. #BSidesLVSlogan\",id:0xf99b4f929569000,timestamp:\"Fri May 03 01:48:29 +0000 2019\"},{username:\"AnonCorn\",slogan:\"When shitposting gets real and the real get shitposting #BSidesLVSlogan\",id:0xf99b4f339169000,timestamp:\"Fri May 03 01:48:23 +0000 2019\"},{username:\"da_667\",slogan:\"The founder looks like a cross between abe lincoln and santa claus. Oh, and hes a bartender, so he fits right in. #BSidesLVSlogan\",id:0xf99b45f70d7e000,timestamp:\"Fri May 03 01:45:52 +0000 2019\"},{username:\"gdbassett\",slogan:\"Tell us where the bad hacker hurt you:\\\\n\\\\u25a1 Phishing\\\\n\\\\u25a1 Creds\\\\n\\\\u25a1 Other\\\\n #BSidesLVSlogan\",id:0xf99b410e817e000,timestamp:\"Fri May 03 01:44:31 +0000 2019\"},{username:\"da_667\",slogan:\"We don't have cocaine like at RSA, but we have stacks of condoms arranged like a coliseum. #BSidesLVSlogan\",id:0xf99b4051d969000,timestamp:\"Fri May 03 01:44:19 +0000 2019\"},{username:\"da_667\",slogan:\"One full decade of justifying Vegas training budget. #BSidesLVSlogan\",id:0xf99b3d725d42000,timestamp:\"Fri May 03 01:43:32 +0000 2019\"},{username:\"5urv1va7rix\",slogan:\"@InfoSystir @da_667 Repeat Bash  #bsideslvslogan\",id:0xf99b26631d7b000,timestamp:\"Fri May 03 01:37:14 +0000 2019\"},{username:\"techno_muse\",slogan:'A decade of swearing to the boss that we have to go to Vegas for \"work\" #BSidesLVSlogan',id:0xf99b259ea560000,timestamp:\"Fri May 03 01:37:02 +0000 2019\"},{username:\"NickInfoSec\",slogan:\"Come celebrate our 0xAnniversary\\\\n#BSidesLVSlogan\",id:0xf99b1ef9056b000,timestamp:\"Fri May 03 01:35:13 +0000 2019\"},{username:\"gdbassett\",slogan:\"That better not be mercator. #BSidesLVSlogan\",id:0xf99b174b7d7e000,timestamp:\"Fri May 03 01:33:07 +0000 2019\"},{username:\"InfoSystir\",slogan:\"@da_667 I dunno...just got here early I guess #BSidesLVSlogan\",id:0xf99b0e5cc96e000,timestamp:\"Fri May 03 01:30:41 +0000 2019\"},{username:\"da_667\",slogan:\"Thank you for attending my declined blackhat/defcon talk. #BSidesLVSlogan\",id:0xf99b0a2bcd7e000,timestamp:\"Fri May 03 01:29:32 +0000 2019\"},{username:\"da_667\",slogan:\"WE CANT HACK HERE\\\\nTHIS IS VENDOR COUNTRY.\\\\n#BSidesLVSlogan\",id:0xf99b01999979000,timestamp:\"Fri May 03 01:27:12 +0000 2019\"},{username:\"da_667\",slogan:\"WHEN I WAS\\\\nA YOUNG SKID\\\\n#BSidesLVSlogan\",id:0xf99af44cad6b000,timestamp:\"Fri May 03 01:23:34 +0000 2019\"},{username:\"KyleHaxWhy\",slogan:\"#BSidesLVSlogan. What happens in Vegas stays in Vegas, unless you executed malware.\",id:0xf99ae7c29946000,timestamp:\"Fri May 03 01:20:08 +0000 2019\"},{username:\"da_667\",slogan:\"The last time I submitted 20 entries a day, I won. and gave away my prize. Teaching me that brute force, while not\\\\u2026 https://t.co/ZZ6FTtJKmO\",id:0xf99ae203657b000,timestamp:\"Fri May 03 01:18:34 +0000 2019\"},{username:\"da_667\",slogan:\"One full decade of being better than defcon. #BSidesLVSlogan\",id:0xf99adaf3d57a000,timestamp:\"Fri May 03 01:16:38 +0000 2019\"},{username:\"5urv1va7rix\",slogan:\"@BSidesLV We didn't start the dumpster fire. It was always burning, Bsides's World keeps turning. #bsideslvslogan #billyjoel\",id:0xf99ada58057a000,timestamp:\"Fri May 03 01:16:28 +0000 2019\"},{username:\"da_667\",slogan:\"RCE. RCE never changes. #BSidesLVSlogan\",id:0xf99acfe9c57b000,timestamp:\"Fri May 03 01:13:38 +0000 2019\"},{username:\"da_667\",slogan:\"10 years and all I've discovered is that I have a terrible addiction to pog slammers. and challenge coins. #BSidesLVSlogan\",id:0xf99acc81e97a000,timestamp:\"Fri May 03 01:12:42 +0000 2019\"},{username:\"da_667\",slogan:\"10 years and all I got was a wardrobe full of free t-shirts.\\\\n#BSidesLVSlogan\",id:0xf99ac4dbd56e000,timestamp:\"Fri May 03 01:10:36 +0000 2019\"},{username:\"da_667\",slogan:\"BSIDESLV: The original 3,650-day.\\\\n#BSidesLVSlogan\",id:0xf99abf35257e000,timestamp:\"Fri May 03 01:09:04 +0000 2019\"},{username:\"da_667\",slogan:\"10 years and we still can't count to 20. #top20securitycontrols #BSidesLVSlogan\",id:0xf99ab98a416c000,timestamp:\"Fri May 03 01:07:31 +0000 2019\"},{username:\"da_667\",slogan:\"Its been a full ten years of fail, but at least we ain't out of ale. So until you put me in jail, you have yet to p\\\\u2026 https://t.co/BUHCVyngt8\",id:0xf99ab4259169000,timestamp:\"Fri May 03 01:06:03 +0000 2019\"},{username:\"BSidesLV\",slogan:\"GUESS WHAT TIME IT IS! IT'S SLOGAN TIME! The #BSidesLVSlogan Contest is open!!! Submit your slogan entries on Twitt\\\\u2026 https://t.co/mMarT9DK9F\",id:0xf99a9e582d7a000,timestamp:\"Fri May 03 01:00:05 +0000 2019\"},{username:\"BSidesLV\",slogan:\"Did you catch our announcement about the winning logo from the #BSidesLVLogo Contest? Here's your winner!!!\\\\n\\\\n(also,\\\\u2026 https://t.co/kT5Ntusmkh\",id:0xf99655b9216d000,timestamp:\"Thu May 02 20:00:38 +0000 2019\"}]},18:function(e,a,t){e.exports=t(45)},24:function(e,a,t){},44:function(e,a,t){},45:function(e,a,t){\"use strict\";t.r(a);var n=t(0),s=t.n(n),o=t(9),i=t.n(o),r=(t(24),t(10)),l=t(11),u=t(16),d=t(12),m=t(17),g=t(13),c=t.n(g),f=t(14),h=t.n(f),b=(t(44),t(15));function y(e){return s.a.createElement(\"div\",{className:\"slogan\"},s.a.createElement(\"p\",null,e.text),s.a.createElement(\"button\",{className:\"favbtn\",onClick:e.favslogan},\"Favorite\"))}function p(e){return s.a.createElement(\"div\",{className:\"slogan\"},s.a.createElement(\"p\",null,e.text),s.a.createElement(\"button\",{className:\"unfavbtn\",onClick:e.unfavslogan},\"Remove\"))}var S=function(e){function a(e){var t;return Object(r.a)(this,a),(t=Object(u.a)(this,Object(d.a)(a).call(this,e))).logout=function(){t.setState({user:null})},t.responseGoogle=function(e){\"bsideslv.org\"===e.profileObj.email.split(\"@\")[1]?t.setState({user:e.profileObj}):alert(\"Login unsucesful, please login with your bsideslv google account\")},t.submitVote=function(){if(window.confirm(\"Are you sure these are what you want to submit?\")){var e=t.state.favorites.map(function(e){return e.id});console.log(JSON.stringify(e));var a=new FormData;a.append(\"entry.1281984272\",t.state.user.email),a.append(\"entry.1106511397\",JSON.stringify(e)),h.a.post(\"https://cors-anywhere.herokuapp.com/https://docs.google.com/forms/d/e/1FAIpQLSfoltL6Tpy9O3C-egmhu4sgyW8QKqC1oYQvaL5mmmpOjj-GbA/formResponse\",a).then(function(){t.setState({message:\"\",email:\"\"})}).catch(function(){t.setState({messageError:!0})}),t.setState({submitted:!0})}},t.state={favorites:[],user:null,submitted:!1},t}return Object(m.a)(a,e),Object(l.a)(a,[{key:\"favSlogan\",value:function(e,a){var t=this.state.favorites.slice();t.push(a),this.setState({favorites:t})}},{key:\"unfavSlogan\",value:function(e,a){for(var t=this.state.favorites.slice(),n=0;n<t.length;n++)if(t[n].id===a.id){t.splice(n,1);break}this.setState({favorites:t})}},{key:\"renderSlogan\",value:function(e,a){var t=this;return s.a.createElement(y,{key:e,text:a.slogan,favslogan:function(){return t.favSlogan(e,a)}})}},{key:\"renderFavorite\",value:function(e,a){var t=this;return s.a.createElement(p,{key:e,text:a.slogan,unfavslogan:function(){return t.unfavSlogan(e,a)}})}},{key:\"render\",value:function(){var e=this;return null==this.state.user?s.a.createElement(\"div\",{style:{padding:\"20px\"}},\"Please log in with your BSidesLV account to continue\",s.a.createElement(\"br\",null),s.a.createElement(c.a,{clientId:\"693738722966-m2uhbrdhrsb1el7u0uiomj1lmov1bbrr.apps.googleusercontent.com\",buttonText:\"Login\",onSuccess:this.responseGoogle,onFailure:this.responseGoogle,cookiePolicy:\"single_host_origin\"})):this.state.submitted?s.a.createElement(\"div\",{style:{padding:\"20px\"}},\"Thank you for submitting your slogan nominations!\"):s.a.createElement(\"div\",null,s.a.createElement(\"h2\",null,\"Welcome to the BSidesLV slogan nominations!\"),s.a.createElement(\"p\",null,\"Every staff member is allowed to pick up to 10 for nominations. The top 10 will be put to a public vote.\",s.a.createElement(\"br\",null),\"If you like a slogan, click on favorite & it will be added to your favorites list on the right. Once you are done reviewing slogans, click submit to send us your nominations.\",s.a.createElement(\"br\",null),\"Note: you can add however many slogans you like to your favorites, but if you have more than 10 you will need to remove them from your list before submitting.\",s.a.createElement(\"br\",null)),s.a.createElement(\"div\",{className:\"slogans\"},b.map(function(a,t){return e.renderSlogan(t,a)})),s.a.createElement(\"div\",{className:\"favorites\"},this.state.favorites.map(function(a,t){return e.renderFavorite(t,a)}),this.state.favorites.length>0?this.state.favorites.length<=10?s.a.createElement(\"button\",{className:\"submitbtn\",onClick:this.submitVote,style:{margin:\"20px\",backgroundColor:\"red\"}},\"Submit\"):s.a.createElement(\"h2\",null,\"Too many slogans selected, please remove some to submit.\"):s.a.createElement(\"h2\",null,\"Favorite some slogans\")))}}]),a}(s.a.Component);var v=function(){return s.a.createElement(\"div\",{className:\"App\"},s.a.createElement(S,null))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(s.a.createElement(v,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[18,1,2]]]);","extractedComments":[]}